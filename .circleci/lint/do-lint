# Copyright (c) Facebook, Inc. and its affiliates.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/bin/bash
set -e

# Try to use the black executable, it it does not
# exist, try the python module.
BLACK=$(command -v black)
if [ ! -x "$BLACK" ]; then
  BLACK="python3 -m black"
fi

do_lint_py() {
  echo "PY: $1"
  $BLACK --diff --check "$1"
}

do_lint_sh() {
  echo "SH: $1"
  shellcheck "$1"
}

do_lint_cppcheck() {
  echo "CPPC: $1"
  options=( "-j2"
      "--inconclusive"
      "--error-exitcode=1"
      "--enable=performance,style,portability,information"
      "--language=c"
      "--library=.circleci/lint/cppcheck/cppcheck.cfg"
      "--suppressions-list=.circleci/lint/cppcheck/cppcheck-suppressions.txt" )
      cppcheck "${options[@]}" "$1"
}

is_c_family_file() {
  if [[ "$1" =~ .*\.c$ ]]   || \
     [[ "$1" =~ .*\.cc$ ]]  || \
     [[ "$1" =~ .*\.cu$ ]]  || \
     [[ "$1" =~ .*\.cxx$ ]] || \
     [[ "$1" =~ .*\.cpp$ ]] || \
     [[ "$1" =~ .*\.h$ ]]   || \
     [[ "$1" =~ .*\.hh$ ]]  || \
     [[ "$1" =~ .*\.hpp$ ]] || \
     [[ "$1" =~ .*\.hxx$ ]] || \
     [[ "$1" =~ .*\.tcc$ ]]
  then
    return 0
  else
    return 1
  fi
}

ORIGIN_COMMIT="$(git merge-base HEAD origin/helium 2>/dev/null || git merge-base HEAD origin/master)"

MODIFIED_FILES="$(git diff --diff-filter=d --name-only "$ORIGIN_COMMIT" --)"

for f in $MODIFIED_FILES; do
  if [[ "$f" =~ .*\.sh$ ]]; then
    do_lint_sh "$f"
  # any of cpp|c|cc|cu|cxx|h|hh|hpp|hxx|tcc
  elif is_c_family_file "$f"; then
    do_lint_cppcheck "$f"
  elif [[ "$f" =~ .*\.py$ ]]; then
    do_lint_py "$f"
  else
    first=$(head -1 "$f")
    if [[ "$first" =~ \#!/.*/sh  || "$first" =~ \#!/.*/bash ]]; then
      do_lint_sh "$f"
    elif [[ "$first" =~ \#!/.*/python  || "$first" =~ \#!/.*/python3 ]]; then
      do_lint_py "$f"
    else
      echo "IGNORE: $f"
    fi
  fi
done
echo "PASS"
