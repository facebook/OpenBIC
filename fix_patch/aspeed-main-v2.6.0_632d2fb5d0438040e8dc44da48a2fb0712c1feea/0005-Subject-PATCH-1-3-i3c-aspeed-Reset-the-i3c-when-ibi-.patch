From 3d3c43e78aaa96e07f5f16fb0a1db43fd7eb4ff4 Mon Sep 17 00:00:00 2001
From: Zane Li <zane.li.wiwynn@gmail.com>
Date: Wed, 5 Mar 2025 10:41:29 +0800
Subject: [PATCH] Subject: [PATCH 1/3] i3c: aspeed: Reset the i3c when ibi/wait
 data consume  timeout.

I3C controller will retry the IBI infinitely. So, this patch adds the
timeout:1s to avoid the IBI storm from destroying the master. In addition,
if the data for the pending read doesn't consume by the master the i3c
controller will stuck at read data prefetch state, this patch will also
add timeout:3s to solve it.

Signed-off-by: Billy Tsai <billy_tsai@aspeedtech.com>
Change-Id: I0ee5a2ac568ed1dc77aaa0543228d206e99d6065
---
 drivers/i3c/i3c_aspeed.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/i3c/i3c_aspeed.c b/drivers/i3c/i3c_aspeed.c
index 8a0a87a58c3..d6a3163ed4d 100644
--- a/drivers/i3c/i3c_aspeed.c
+++ b/drivers/i3c/i3c_aspeed.c
@@ -1754,7 +1754,7 @@ static int i3c_aspeed_slave_reset_queue(const struct device *dev)
 	return 0;
 }
 
-static int i3c_aspeed_slave_wait_data_consume(const struct device *dev)
+static uint32_t i3c_aspeed_slave_wait_data_consume(const struct device *dev)
 {
 	struct i3c_aspeed_obj *obj = DEV_DATA(dev);
 	union i3c_intr_s events;
@@ -1762,9 +1762,8 @@ static int i3c_aspeed_slave_wait_data_consume(const struct device *dev)
 	osEventFlagsClear(obj->data_event, ~osFlagsError);
 	events.value = 0;
 	events.fields.resp_q_ready = 1;
-	osEventFlagsWait(obj->data_event, events.value, osFlagsWaitAny, osWaitForever);
 
-	return 0;
+	return osEventFlagsWait(obj->data_event, events.value, osFlagsWaitAny, K_SECONDS(3).ticks);
 }
 
 int i3c_aspeed_slave_put_read_data(const struct device *dev, struct i3c_slave_payload *data,
@@ -2160,6 +2159,7 @@ static int i3c_aspeed_init(const struct device *dev)
 
 	i3c_register->intr_status.value = GENMASK(31, 0);
 	intr_reg.value = 0;
+	intr_reg.fields.xfr_abort = 1;
 	intr_reg.fields.xfr_error = 1;
 	intr_reg.fields.resp_q_ready = 1;
 
-- 
2.25.1

