From 83430a89948619c869c4d005192e50c009626e5e Mon Sep 17 00:00:00 2001
From: Zane Li <zane.li.wiwynn@gmail.com>
Date: Thu, 6 Mar 2025 10:51:16 +0800
Subject: [PATCH] Subject: [PATCH] spi: add spi register read/write API

Implement SPI basic funciton in SPI nor driver.
---
 drivers/flash/flash_handlers.c    | 24 ++++++++++++++++++++----
 drivers/flash/spi_nor.c           |  2 ++
 drivers/flash/spi_nor_multi_dev.c | 31 +++++++++++++++++++++++++++++--
 include/drivers/flash.h           | 28 ++++++++++++++++++++++++++--
 4 files changed, 77 insertions(+), 8 deletions(-)

diff --git a/drivers/flash/flash_handlers.c b/drivers/flash/flash_handlers.c
index a5a6c425c2f..c0a1bc31791 100644
--- a/drivers/flash/flash_handlers.c
+++ b/drivers/flash/flash_handlers.c
@@ -28,12 +28,28 @@ static inline int z_vrfy_flash_write(const struct device *dev, off_t offset,
 }
 #include <syscalls/flash_write_mrsh.c>
 
-static inline int z_vrfy_flash_write_protection_set(const struct device *dev,
-						    bool enable)
+static inline int z_vrfy_flash_reg_read(const struct device *dev, off_t offset, void *data,
+					size_t len)
+{
+	Z_OOPS(Z_SYSCALL_DRIVER_FLASH(dev, reg_read));
+	Z_OOPS(Z_SYSCALL_MEMORY_WRITE(data, len));
+	return z_impl_flash_reg_read((const struct device *)dev, offset, (void *)data, len);
+}
+#include <syscalls/flash_reg_read_mrsh.c>
+
+static inline int z_vrfy_flash_reg_write(const struct device *dev, off_t offset, const void *data,
+					 size_t len)
+{
+	Z_OOPS(Z_SYSCALL_DRIVER_FLASH(dev, reg_write));
+	Z_OOPS(Z_SYSCALL_MEMORY_READ(data, len));
+	return z_impl_flash_reg_write((const struct device *)dev, offset, (const void *)data, len);
+}
+#include <syscalls/flash_reg_write_mrsh.c>
+
+static inline int z_vrfy_flash_write_protection_set(const struct device *dev, bool enable)
 {
 	Z_OOPS(Z_SYSCALL_DRIVER_FLASH(dev, write_protection));
-	return z_impl_flash_write_protection_set((const struct device *)dev,
-						 enable);
+	return z_impl_flash_write_protection_set((const struct device *)dev, enable);
 }
 #include <syscalls/flash_write_protection_set_mrsh.c>
 
diff --git a/drivers/flash/spi_nor.c b/drivers/flash/spi_nor.c
index 11f7cb128a2..2983d8865a1 100644
--- a/drivers/flash/spi_nor.c
+++ b/drivers/flash/spi_nor.c
@@ -1190,6 +1190,8 @@ static const struct flash_driver_api spi_nor_api = {
 	.sfdp_read = spi_nor_sfdp_read,
 	.read_jedec_id = spi_nor_read_jedec_id,
 #endif
+	.reg_read = spi_nor_read,
+	.reg_write = spi_nor_write,
 };
 
 #ifndef CONFIG_SPI_NOR_SFDP_RUNTIME
diff --git a/drivers/flash/spi_nor_multi_dev.c b/drivers/flash/spi_nor_multi_dev.c
index 9f922b26a09..7273d1f0b53 100644
--- a/drivers/flash/spi_nor_multi_dev.c
+++ b/drivers/flash/spi_nor_multi_dev.c
@@ -874,8 +874,33 @@ static int winbond_w25q02g_read_fixup(const struct device *dev,
 	return ret;
 }
 
-static int spi_nor_read(const struct device *dev, off_t addr, void *dest,
-			size_t size)
+static int spi_reg_read(const struct device *dev, off_t addr, void *dest, size_t size)
+{
+	struct spi_nor_op_info op_info = SPI_NOR_OP_INFO(JESD216_MODE_111, addr, 0, 0, 0, dest,
+							 size, SPI_NOR_DATA_DIRECT_IN);
+
+	int ret = spi_nor_op_exec(dev, op_info);
+
+	return ret;
+}
+
+static int spi_reg_write(const struct device *dev, off_t addr, const void *src, size_t size)
+{
+	int ret;
+	struct spi_nor_op_info op_info = SPI_NOR_OP_INFO(
+		JESD216_MODE_111, addr, 0, 0, 0, (void *)src, size, SPI_NOR_DATA_DIRECT_OUT);
+
+	ret = spi_nor_wren(dev);
+
+	if (ret == 0) {
+		ret = spi_nor_op_exec(dev, op_info);
+		spi_nor_wait_until_ready(dev);
+	}
+
+	return ret;
+}
+
+static int spi_nor_read(const struct device *dev, off_t addr, void *dest, size_t size)
 {
 	struct spi_nor_data *data = dev->data;
 	struct spi_nor_cmd_info cmd_info = data->cmd_info;
@@ -1924,6 +1949,8 @@ static const struct flash_driver_api spi_nor_api = {
 	.page_layout = spi_nor_pages_layout,
 	.sfdp_read = spi_nor_sfdp_read,
 	.read_jedec_id = spi_nor_read_jedec_id,
+	.reg_read = spi_reg_read,
+	.reg_write = spi_reg_write,
 };
 
 #define SPI_NOR_MULTI_INIT(n)	\
diff --git a/include/drivers/flash.h b/include/drivers/flash.h
index 49663462041..c303a37edfc 100644
--- a/include/drivers/flash.h
+++ b/include/drivers/flash.h
@@ -124,10 +124,13 @@ typedef void (*flash_api_pages_layout)(const struct device *dev,
 				       size_t *layout_size);
 #endif /* CONFIG_FLASH_PAGE_LAYOUT */
 
-typedef int (*flash_api_sfdp_read)(const struct device *dev, off_t offset,
-				   void *data, size_t len);
+typedef int (*flash_api_sfdp_read)(const struct device *dev, off_t offset, void *data, size_t len);
 typedef int (*flash_api_read_jedec_id)(const struct device *dev, uint8_t *id);
 
+typedef int (*flash_api_reg_write)(const struct device *dev, off_t offset, const void *data,
+				  size_t len);
+typedef int (*flash_api_reg_read)(const struct device *dev, off_t offset, void *data, size_t len);
+
 __subsystem struct flash_driver_api {
 	flash_api_read read;
 	flash_api_write write;
@@ -141,6 +144,8 @@ __subsystem struct flash_driver_api {
 	flash_api_sfdp_read sfdp_read;
 	flash_api_read_jedec_id read_jedec_id;
 #endif /* CONFIG_FLASH_JESD216_API */
+	flash_api_reg_read reg_read;
+	flash_api_reg_write reg_write;
 };
 
 /**
@@ -177,6 +182,25 @@ static inline int z_impl_flash_read(const struct device *dev, off_t offset,
 
 	return api->read(dev, offset, data, len);
 }
+__syscall int flash_reg_read(const struct device *dev, off_t offset, void *data, size_t len);
+
+static inline int z_impl_flash_reg_read(const struct device *dev, off_t offset, void *data,
+					size_t len)
+{
+	const struct flash_driver_api *api = (const struct flash_driver_api *)dev->api;
+
+	return api->reg_read(dev, offset, data, len);
+}
+
+__syscall int flash_reg_write(const struct device *dev, off_t offset, const void *data, size_t len);
+
+static inline int z_impl_flash_reg_write(const struct device *dev, off_t offset, const void *data,
+					 size_t len)
+{
+	const struct flash_driver_api *api = (const struct flash_driver_api *)dev->api;
+
+	return api->reg_write(dev, offset, data, len);
+}
 
 /**
  *  @brief  Write buffer into flash memory.
-- 
2.25.1

