From 9f50d46820f211a3dba0eccf091d5c934ba059f8 Mon Sep 17 00:00:00 2001
From: Tyrone Ting <kfting@nuvoton.com>
Date: Mon, 20 Oct 2025 17:30:41 +0800
Subject: [PATCH] drivers: i2c: restore i2c target settings before unlocking
 the mutex

Signed-off-by: Tyrone Ting <kfting@nuvoton.com>
---
 drivers/i2c/i2c_npcm4xx.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/i2c/i2c_npcm4xx.c b/drivers/i2c/i2c_npcm4xx.c
index 6960dfc985d..ba6c4a0a568 100755
--- a/drivers/i2c/i2c_npcm4xx.c
+++ b/drivers/i2c/i2c_npcm4xx.c
@@ -1168,23 +1168,23 @@ static int i2c_npcm4xx_transfer(const struct device *dev, struct i2c_msg *msgs,
 	data->master_oper_state = I2C_NPCM4XX_OPER_STA_START;
 	data->err_code = 0;
 	if (i2c_npcm4xx_combine_msg(dev, msgs, num_msgs) < 0) {
-		i2c_npcm4xx_mutex_unlock(dev);
 		/* restore slave addr setting */
 		for (i = 0; i < I2C_SLAVE_NUM; i++) {
 			i2c_conf_slave(dev, i, data->value[i]);
 		}
+		i2c_npcm4xx_mutex_unlock(dev);
 		return -EPROTONOSUPPORT;
 	}
 
 	if (data->rx_cnt == 0 && data->tx_cnt == 0) {
 		/* Quick command */
 		if (num_msgs != 1) {
-			/* Quick command must have one msg */
-			i2c_npcm4xx_mutex_unlock(dev);
 			/* restore slave addr setting */
 			for (i = 0; i < I2C_SLAVE_NUM; i++) {
 				i2c_conf_slave(dev, i, data->value[i]);
 			}
+			/* Quick command must have one msg */
+			i2c_npcm4xx_mutex_unlock(dev);
 			return -EPROTONOSUPPORT;
 		}
 		if ((msgs->flags & I2C_MSG_RW_MASK) == I2C_MSG_WRITE) {
@@ -1219,13 +1219,13 @@ static int i2c_npcm4xx_transfer(const struct device *dev, struct i2c_msg *msgs,
 		ret = i2c_npcm4xx_recover_bus(dev);
 	}
 
-	i2c_npcm4xx_mutex_unlock(dev);
-
 	/* restore slave addr setting */
 	for (i = 0; i < I2C_SLAVE_NUM; i++) {
 		i2c_conf_slave(dev, i, data->value[i]);
 	}
 
+	i2c_npcm4xx_mutex_unlock(dev);
+
 	return ret;
 }
 
-- 
2.17.1

