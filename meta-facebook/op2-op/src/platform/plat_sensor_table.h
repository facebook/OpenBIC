/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef PLAT_SENSOR_TABLE_H
#define PLAT_SENSOR_TABLE_H

#include <stdint.h>
#include "sensor.h"

#define SENSOR_NUM_POWER_ERROR 0x56
#define SENSOR_NUM_SYSTEM_STATUS 0x10

#define EXPA_RETIMER_EEPROM_ADDR (0xA0 >> 1)
#define EXPA_RETIMER_ADDR (0x46 >> 1)
#define TMP75_EXPA_TEMP_ADDR (0x94 >> 1)
#define TMP75_EXPB_TEMP_ADDR (0x9A >> 1)
#define INA233_EXPA_E1S_0_ADDR (0x98 >> 1)
#define INA233_EXPA_E1S_1_ADDR (0x88 >> 1)
#define INA233_EXPA_E1S_2_ADDR (0x8C >> 1)
#define INA233_EXPA_MAIN_ADDR (0x9A >> 1)
#define INA233_EXPB_E1S_0_ADDR (0x98 >> 1)
#define INA233_EXPB_E1S_1_ADDR (0x92 >> 1)
#define INA233_EXPB_E1S_2_ADDR (0x88 >> 1)
#define INA233_EXPB_E1S_3_ADDR (0x82 >> 1)
#define INA233_EXPB_E1S_4_ADDR (0x8A >> 1)
#define INA233_EXPB_MAIN_ADDR (0x90 >> 1)
#define NVME_ADDR (0xD4 >> 1)

#define TMP75_TEMP_OFFSET 0x00
#define NVME_TEMP_OFFSET 0x00
#define INA233_VOLT_OFFSET 0x8B
#define INA233_CURR_OFFSET 0x8C
#define INA233_PWR_OFFSET 0x96

#define SQ5220X_VOL_OFFSET 0x02
#define SQ5220X_PWR_OFFSET 0x03
#define SQ5220X_CUR_OFFSET 0x04

/* The difference between sensor number in each position is 0x30.
 * E.g. : SENSOR_NUM_1OU_TEMP is 0x40 and SENSOR_NUM_2OU_TEMP is 0x70.
 */
#define SENSOR_NUMBER_INTERVAL 0x30

enum SENSOR_NUM {

	//1OU
	SENSOR_NUM_1OU_TEMP = 0x40,

	SENSOR_NUM_1OU_E1S_SSD0_P12V_VOLT,
	SENSOR_NUM_1OU_E1S_SSD1_P12V_VOLT,
	SENSOR_NUM_1OU_E1S_SSD2_P12V_VOLT,
	SENSOR_NUM_1OU_P12V_EDGE_VOLT = 0x46,

	SENSOR_NUM_1OU_E1S_SSD0_P3V3_ADC_VOLT,
	SENSOR_NUM_1OU_E1S_SSD1_P3V3_ADC_VOLT,
	SENSOR_NUM_1OU_E1S_SSD2_P3V3_ADC_VOLT,

	SENSOR_NUM_1OU_P3V3_STBY_ADC_VOLT = 0x4C,
	SENSOR_NUM_1OU_P1V8_ADC_VOLT,
	SENSOR_NUM_1OU_P0V9_ADC_VOLT,
	SENSOR_NUM_1OU_P1V2_ADC_VOLT,

	SENSOR_NUM_1OU_E1S_SSD0_P12V_CURR,
	SENSOR_NUM_1OU_E1S_SSD1_P12V_CURR,
	SENSOR_NUM_1OU_E1S_SSD2_P12V_CURR,
	SENSOR_NUM_1OU_P12V_EDGE_CURR = 0x55,

	SENSOR_NUM_1OU_E1S_SSD0_P12V_PWR,
	SENSOR_NUM_1OU_E1S_SSD1_P12V_PWR,
	SENSOR_NUM_1OU_E1S_SSD2_P12V_PWR,
	SENSOR_NUM_1OU_P12V_EDGE_PWR = 0x5B,

	SENSOR_NUM_1OU_E1S_SSD0_TEMP_C,
	SENSOR_NUM_1OU_E1S_SSD1_TEMP_C,
	SENSOR_NUM_1OU_E1S_SSD2_TEMP_C, //5E

	SENSOR_NUM_1OU_RE_TIMER_TEMP_C = 0x61,

	//2OU
	SENSOR_NUM_2OU_TEMP = 0x70,

	SENSOR_NUM_2OU_E1S_SSD0_P12V_VOLT,
	SENSOR_NUM_2OU_E1S_SSD1_P12V_VOLT,
	SENSOR_NUM_2OU_E1S_SSD2_P12V_VOLT,
	SENSOR_NUM_2OU_E1S_SSD3_P12V_VOLT,
	SENSOR_NUM_2OU_E1S_SSD4_P12V_VOLT,
	SENSOR_NUM_2OU_MAIN_P12V_VOLT, //76

	SENSOR_NUM_2OU_E1S_SSD0_P3V3_ADC_VOLT,
	SENSOR_NUM_2OU_E1S_SSD1_P3V3_ADC_VOLT,
	SENSOR_NUM_2OU_E1S_SSD2_P3V3_ADC_VOLT,
	SENSOR_NUM_2OU_E1S_SSD3_P3V3_ADC_VOLT,
	SENSOR_NUM_2OU_E1S_SSD4_P3V3_ADC_VOLT,

	SENSOR_NUM_2OU_P3V3_STBY_ADC_VOLT, //7c
	SENSOR_NUM_2OU_P1V8_STBY_ADC_VOLT,
	SENSOR_NUM_2OU_P1V2_STBY_ADC_VOLT = 0x7F,

	SENSOR_NUM_2OU_E1S_SSD0_P12V_CURR,
	SENSOR_NUM_2OU_E1S_SSD1_P12V_CURR,
	SENSOR_NUM_2OU_E1S_SSD2_P12V_CURR,
	SENSOR_NUM_2OU_E1S_SSD3_P12V_CURR,
	SENSOR_NUM_2OU_E1S_SSD4_P12V_CURR,
	SENSOR_NUM_2OU_MAIN_P12V_CURR, //85

	SENSOR_NUM_2OU_E1S_SSD0_P12V_PWR,
	SENSOR_NUM_2OU_E1S_SSD1_P12V_PWR,
	SENSOR_NUM_2OU_E1S_SSD2_P12V_PWR,
	SENSOR_NUM_2OU_E1S_SSD3_P12V_PWR,
	SENSOR_NUM_2OU_E1S_SSD4_P12V_PWR,
	SENSOR_NUM_2OU_MAIN_P12V_PWR, //8B

	SENSOR_NUM_2OU_E1S_SSD0_TEMP_C,
	SENSOR_NUM_2OU_E1S_SSD1_TEMP_C,
	SENSOR_NUM_2OU_E1S_SSD2_TEMP_C,
	SENSOR_NUM_2OU_E1S_SSD3_TEMP_C,
	SENSOR_NUM_2OU_E1S_SSD4_TEMP_C, //90

	//3OU
	SENSOR_NUM_3OU_TEMP = 0xA0,

	SENSOR_NUM_3OU_E1S_SSD0_P12V_VOLT,
	SENSOR_NUM_3OU_E1S_SSD1_P12V_VOLT,
	SENSOR_NUM_3OU_E1S_SSD2_P12V_VOLT,
	SENSOR_NUM_3OU_P12V_EDGE_VOLT = 0xA6,

	SENSOR_NUM_3OU_E1S_SSD0_P3V3_ADC_VOLT,
	SENSOR_NUM_3OU_E1S_SSD1_P3V3_ADC_VOLT,
	SENSOR_NUM_3OU_E1S_SSD2_P3V3_ADC_VOLT,

	SENSOR_NUM_3OU_P3V3_STBY_ADC_VOLT = 0xAC,
	SENSOR_NUM_3OU_P1V8_ADC_VOLT,
	SENSOR_NUM_3OU_P0V9_ADC_VOLT,
	SENSOR_NUM_3OU_P1V2_ADC_VOLT,

	SENSOR_NUM_3OU_E1S_SSD0_P12V_CURR,
	SENSOR_NUM_3OU_E1S_SSD1_P12V_CURR,
	SENSOR_NUM_3OU_E1S_SSD2_P12V_CURR,
	SENSOR_NUM_3OU_P12V_EDGE_CURR = 0xB5,

	SENSOR_NUM_3OU_E1S_SSD0_P12V_PWR,
	SENSOR_NUM_3OU_E1S_SSD1_P12V_PWR,
	SENSOR_NUM_3OU_E1S_SSD2_P12V_PWR,
	SENSOR_NUM_3OU_P12V_EDGE_PWR = 0xBB,

	SENSOR_NUM_3OU_E1S_SSD0_TEMP_C,
	SENSOR_NUM_3OU_E1S_SSD1_TEMP_C,
	SENSOR_NUM_3OU_E1S_SSD2_TEMP_C, //BE

	SENSOR_NUM_3OU_RE_TIMER_TEMP_C = 0xC1,

	//4OU
	SENSOR_NUM_4OU_TEMP = 0xD0,

	SENSOR_NUM_4OU_E1S_SSD0_P12V_VOLT,
	SENSOR_NUM_4OU_E1S_SSD1_P12V_VOLT,
	SENSOR_NUM_4OU_E1S_SSD2_P12V_VOLT,
	SENSOR_NUM_4OU_E1S_SSD3_P12V_VOLT,
	SENSOR_NUM_4OU_E1S_SSD4_P12V_VOLT,
	SENSOR_NUM_4OU_MAIN_P12V_VOLT, //D6
	SENSOR_NUM_4OU_E1S_SSD0_P3V3_ADC_VOLT,
	SENSOR_NUM_4OU_E1S_SSD1_P3V3_ADC_VOLT,
	SENSOR_NUM_4OU_E1S_SSD2_P3V3_ADC_VOLT,
	SENSOR_NUM_4OU_E1S_SSD3_P3V3_ADC_VOLT,
	SENSOR_NUM_4OU_E1S_SSD4_P3V3_ADC_VOLT,
	SENSOR_NUM_4OU_P3V3_STBY_ADC_VOLT, //DC
	SENSOR_NUM_4OU_P1V8_STBY_ADC_VOLT,
	SENSOR_NUM_4OU_P1V2_STBY_ADC_VOLT = 0xDF,

	SENSOR_NUM_4OU_E1S_SSD0_P12V_CURR,
	SENSOR_NUM_4OU_E1S_SSD1_P12V_CURR,
	SENSOR_NUM_4OU_E1S_SSD2_P12V_CURR,
	SENSOR_NUM_4OU_E1S_SSD3_P12V_CURR,
	SENSOR_NUM_4OU_E1S_SSD4_P12V_CURR,
	SENSOR_NUM_4OU_MAIN_P12V_CURR, //E5

	SENSOR_NUM_4OU_E1S_SSD0_P12V_PWR,
	SENSOR_NUM_4OU_E1S_SSD1_P12V_PWR,
	SENSOR_NUM_4OU_E1S_SSD2_P12V_PWR,
	SENSOR_NUM_4OU_E1S_SSD3_P12V_PWR,
	SENSOR_NUM_4OU_E1S_SSD4_P12V_PWR,
	SENSOR_NUM_4OU_MAIN_P12V_PWR, //EB

	SENSOR_NUM_4OU_E1S_SSD0_TEMP_C,
	SENSOR_NUM_4OU_E1S_SSD1_TEMP_C,
	SENSOR_NUM_4OU_E1S_SSD2_TEMP_C,
	SENSOR_NUM_4OU_E1S_SSD3_TEMP_C,
	SENSOR_NUM_4OU_E1S_SSD4_TEMP_C, //F0
};

void pal_change_sensor_config_number(void);
void pal_extend_sensor_config(void);
void load_sensor_config(void);
uint8_t pal_get_extend_sensor_config(void);
void change_ina233_sensor_addr(void);
void change_power_monitor_config_for_sq5220x(void);
int check_pwr_monitor_type(void);

enum POWER_MONITOR_TYPE {
	PWR_INA233,
	PWR_SQ5220X,
};

#endif
